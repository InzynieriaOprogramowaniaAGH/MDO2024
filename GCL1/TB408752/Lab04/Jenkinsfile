pipeline {
    agent any

    stages {
        stage('Clean') {
            steps {
                script {
                    deleteDir()

                    sh 'docker builder prune -a -f'
                }
            }
        }
        
        stage('Clone Repository') {
            steps {
                script {
                    git url: 'https://github.com/InzynieriaOprogramowaniaAGH/MDO2024.git', branch: 'TB408752_Lab04'
                }
            }
        }
        
        stage('Build') {
            steps {
                script {
                    dir('GCL1/TB408752/Lab02') {
                        def dockerImage = "build_${env.JOB_NAME}_${env.BUILD_NUMBER}"
                        sh "docker build -t ${dockerImage} -f Dockerfile.build . --no-cache"
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    dir('GCL1/TB408752/Lab02') {
                        def dockerImage = "test_${env.JOB_NAME}_${env.BUILD_NUMBER}"
                        sh "docker build -t ${dockerImage} -f Dockerfile.test . --no-cache"
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    dir('GCL1/TB408752/Lab02') {
                        def dockerImage = "deploy_${env.JOB_NAME}_${env.BUILD_NUMBER}"
                        sh "docker build -t ${dockerImage} -f Dockerfile.deploy . --no-cache"
                    }
                }
            }
        }

        stage('Publish') {
            steps {
                script {
                    dir('GCL1/TB408752/Lab02') {
                        def dockerImage = "deploy_${env.JOB_NAME}_${env.BUILD_NUMBER}"
                        sh "docker build -t ${dockerImage} -f Dockerfile.deploy . --no-cache"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline successfully executed!'
        }
        failure {
            echo 'Pipeline failed! Check the logs for details.'
        }
    }
}
